{"version":3,"sources":["App.js","index.js"],"names":["step","initial","marks","value","label","valuetext","App","state","sliderSumr","sliderSumg","sliderSumb","onSlideStart","setState","e","this","className","Typography","style","marginLeft","id","gutterBottom","Slider","defaultValue","getAriaValueText","aria-labelledby","min","max","onChange","handleChanger","valueLabelDisplay","handleChangeg","handleChangeb","padding","backgroundColor","String","toString","padStart","display","borderRadius","width","height","marginTop","toUpperCase","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oQAO0BA,EAAO,EAAGC,EAAU,IAExCC,EAAQ,CACZ,CACEC,MAAO,EACPC,MAAO,KAET,CACED,MAAO,IACPC,MAAO,QAIX,SAASC,EAAUF,GACjB,MAAM,GAAN,OAAUA,G,IAkGGG,E,2MA9FbC,MAAQ,CAENC,WAAYP,EACZQ,WAAYR,EACZS,WAAYT,EACZD,KAAMA,G,EAIRW,aAAe,SAAAR,GAEb,EAAKS,SAAS,CAAEZ,KAAMA,K,6EAGVa,EAAEV,GACdW,KAAKF,SAAS,CAAEJ,WAAYL,M,oCAGhBU,EAAEV,GACdW,KAAKF,SAAS,CAAEH,WAAYN,M,oCAGhBU,EAAEV,GACdW,KAAKF,SAAS,CAAEF,WAAYP,M,+BAGpB,IAAD,OACP,OACE,yBAAKY,UAAU,OACb,kBAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,WAAW,UAAWC,GAAG,kBAAkBC,cAAY,GAA3E,OAGA,kBAACC,EAAA,EAAD,CACEC,aAAcrB,EACdsB,iBAAkBlB,EAClBmB,kBAAgB,8BAChBxB,KAAMA,EACNyB,IAvDa,EAwDbC,IAxDE,IAyDFxB,MAAOA,EACPyB,SAAU,SAACd,EAAEV,GAAH,OAAa,EAAKyB,cAAef,EAAEV,IAC7C0B,kBAAkB,SAEpB,kBAACb,EAAA,EAAD,CAAYC,MAAO,CAACC,WAAW,QAASC,GAAG,kBAAkBC,cAAY,GAAzE,SAGA,kBAACC,EAAA,EAAD,CACEC,aAAcrB,EACdsB,iBAAkBlB,EAClBmB,kBAAgB,8BAChBxB,KAAMA,EACNyB,IArEa,EAsEbC,IAtEE,IAuEFxB,MAAOA,EACPyB,SAAU,SAACd,EAAEV,GAAH,OAAa,EAAK2B,cAAejB,EAAEV,IAC7C0B,kBAAkB,SAEpB,kBAACb,EAAA,EAAD,CAAYC,MAAO,CAACC,WAAW,QAASC,GAAG,kBAAkBC,cAAY,GAAzE,QAGA,kBAACC,EAAA,EAAD,CACEC,aAAcrB,EACdsB,iBAAkBlB,EAClBmB,kBAAgB,8BAChBxB,KAAMA,EACNyB,IAnFa,EAoFbC,IApFE,IAqFFxB,MAAOA,EACPyB,SAAU,SAACd,EAAEV,GAAH,OAAa,EAAK4B,cAAelB,EAAEV,IAC7C0B,kBAAkB,SAEpB,yBAAKZ,MAAO,CACVe,QAAQ,GAGRC,gBAAiB,IACfC,OAAOpB,KAAKP,MAAMC,WAAW2B,SAAS,KAAKC,SAAS,EAAG,KACvDF,OAAOpB,KAAKP,MAAME,WAAW0B,SAAS,KAAKC,SAAS,EAAG,KACvDF,OAAOpB,KAAKP,MAAMG,WAAWyB,SAAS,KAAKC,SAAS,EAAG,KACzDC,QAAQ,eACRC,aAAc,MACdC,MAAM,IACNC,OAAO,OAET,2BAAOvB,MAAS,CAACwB,UAAU,UACvBP,OAAOpB,KAAKP,MAAMC,WAAW2B,SAAS,KAAKC,SAAS,EAAG,KACvDF,OAAOpB,KAAKP,MAAME,WAAW0B,SAAS,KAAKC,SAAS,EAAG,KACvDF,OAAOpB,KAAKP,MAAMG,WAAWyB,SAAS,KAAKC,SAAS,EAAG,MAAMM,oB,GAxFvDC,IAAMC,WCpBlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,yBAAKlC,UAAU,SACb,kBAAC,EAAD,OAEF8B,K","file":"static/js/main.bd40bbd8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n// import { createMuiTheme } from 'material-ui/styles';\n\n// Constands for these for simplicity, would typically be props\nconst max = 255, min = 0, step = 1, initial = 127;\n\nconst marks = [\n  {\n    value: 0,\n    label: '0',\n  },\n  {\n    value: 255,\n    label: '255',\n  },\n];\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nclass App extends React.Component {\n  state = {\n    // Set state values to reflect consts/props\n    sliderSumr: initial,\n    sliderSumg: initial,\n    sliderSumb: initial,\n    step: step\n  };\n\n\n  onSlideStart = value => {\n    // Set the step value sent to the slider when the user starts dragging\n    this.setState({ step: step });\n  };\n\n  handleChanger(e,value) {\n    this.setState({ sliderSumr: value });\n  }\n\n  handleChangeg(e,value) {\n    this.setState({ sliderSumg: value });\n  }\n\n  handleChangeb(e,value) {\n    this.setState({ sliderSumb: value });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Typography style={{marginLeft:\"-92.5%\"}} id=\"discrete-slider\" gutterBottom>\n          Red\n        </Typography>\n        <Slider\n          defaultValue={initial}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-small-steps\"\n          step={step}\n          min={min}\n          max={max}\n          marks={marks}\n          onChange={(e,value) => this.handleChanger( e,value)}\n          valueLabelDisplay=\"auto\"\n        />\n        <Typography style={{marginLeft:\"-88%\"}} id=\"discrete-slider\" gutterBottom>\n          Green \n        </Typography>\n        <Slider\n          defaultValue={initial}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-small-steps\"\n          step={step}\n          min={min}\n          max={max}\n          marks={marks}\n          onChange={(e,value) => this.handleChangeg( e,value)}\n          valueLabelDisplay=\"auto\"\n        />\n        <Typography style={{marginLeft:\"-92%\"}} id=\"discrete-slider\" gutterBottom>\n          Blue\n        </Typography>\n        <Slider\n          defaultValue={initial}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-small-steps\"\n          step={step}\n          min={min}\n          max={max}\n          marks={marks}\n          onChange={(e,value) => this.handleChangeb( e,value)}\n          valueLabelDisplay=\"auto\"\n        />\n        <div style={{\n          padding:20,\n          // marginLeft:\"%\",\n          // backgroundColor: \"#00a2\",\n          backgroundColor: \"#\"+\n            String(this.state.sliderSumr.toString(16)).padStart(2, '0')+\n            String(this.state.sliderSumg.toString(16)).padStart(2, '0')+\n            String(this.state.sliderSumb.toString(16)).padStart(2, '0'),\n          display:\"inline-block\",\n          borderRadius: \"50%\",\n          width:250,\n          height:250,}} >\n        </div>\n        <label style = {{marginTop:\"-45%\"}}>\n          {(String(this.state.sliderSumr.toString(16)).padStart(2, '0')+\n            String(this.state.sliderSumg.toString(16)).padStart(2, '0')+\n            String(this.state.sliderSumb.toString(16)).padStart(2, '0')).toUpperCase()}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <div className=\"outer\">\n    <App />\n  </div>,\n  rootElement\n);\n"],"sourceRoot":""}